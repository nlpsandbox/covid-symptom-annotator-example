openapi: 3.0.3
info:
  contact:
    email: team@nlpsandbox.io
    name: The NLP Sandbox Team
    url: https://nlpsandbox.io
  description: |
    # Introduction
    The COVID Symptom Annotator is one of the first NLP Sandbox tools that can be benchmarked on [nlpsandbox.io](https://nlpsandbox.io). A COVID Symptom Annotator takes as input a clinical note and outputs a list of predicted COVID-19 sign and symptom annotations found in the clinical note. This OpenAPI document describes the specification of a COVID Symptom Annotator. This specification includes the schemas of the input and output data, and the conditions that this annotator must meet if you want to benchmark its performance on [nlpsandbox.io](https://nlpsandbox.io).
    # Getting Started
    The GitHub repository [nlpsandbox/covid-symptom-annotator-example](https://github.com/nlpsandbox/covid-symptom-annotator-example) provides a simple example implementation of a Python-Flask COVID Symptom Annotator. By the end of the tutorial available in this repository, you will have built a Docker image for a simple COVID Symptom Annotator. You will then be able to submit this image to [nlpsandbox.io](https://nlpsandbox.io) to benchmark its performance.
    # Benchmarking Requirements
    The following conditions must be met by your COVID Symptom Annotator if you want to benchmark its performance on [nlpsandbox.io](https://nlpsandbox.io).
    - The endpoint `/` must redirect to `/api/v1/tool`.
    - The endpoint `/ui` must redirect to the web interface (UI).
    - The output of this tool must be reproducible: a given input should always
      generate the same output.

    - This tool must not attempt to connect to remote server for reproducibility,
      robustness, and security reasons. When benchmarked on [nlpsandbox.io](https://nlpsandbox.io),
      this tool will not be able to connect to remote servers.

    # Examples
    - [COVID Symptom Annotator Example (Python)](https://github.com/nlpsandbox/covid-symptom-annotator-example)
  license:
    name: Apache 2.0
    url: https://github.com/nlpsandbox/nlpsandbox-schemas/blob/develop/LICENSE
  title: NLP Sandbox COVID Symptom Annotator API
  version: 1.0.2
  x-logo:
    url: https://nlpsandbox.github.io/nlpsandbox-schemas/logo.png
servers:
- url: http://example.com/api/v1
- url: https://example.com/api/v1
tags:
- description: Operations about health checks
  name: HealthCheck
- description: Operations about COVID symptom annotations
  name: TextCovidSymptomAnnotation
- description: Operations about this tool
  name: Tool
paths:
  /healthCheck:
    get:
      description: Get information about the health of the service
      operationId: get_health_check
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Get health check information
      tags:
      - HealthCheck
      x-openapi-router-controller: openapi_server.controllers.health_check_controller
  /textCovidSymptomAnnotations:
    post:
      description: Return the COVID symptom annotations found in a clinical note
      operationId: create_text_covid_symptom_annotations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextCovidSymptomAnnotationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextCovidSymptomAnnotationResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Annotate COVID symptoms in a clinical note
      tags:
      - TextCovidSymptomAnnotation
      x-openapi-router-controller: openapi_server.controllers.text_covid_symptom_annotation_controller
  /tool:
    get:
      description: Get information about the tool
      operationId: get_tool
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tool'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Get tool information
      tags:
      - Tool
      x-openapi-router-controller: openapi_server.controllers.tool_controller
  /tool/dependencies:
    get:
      description: Get the dependencies of this tool
      operationId: get_tool_dependencies
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolDependencies'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Get tool dependencies
      tags:
      - Tool
      x-openapi-router-controller: openapi_server.controllers.tool_controller
components:
  responses:
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The specified resource was not found
    InternalServerError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The request cannot be fulfilled due to an unexpected server error
    BadRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Invalid request
  schemas:
    HealthCheck:
      description: Represents the health of a service
      example:
        status: pass
      properties:
        status:
          description: Indicates whether the service status is acceptable or not
          enum:
          - pass
          - fail
          - warn
          title: status
          type: string
      required:
      - status
      title: HealthCheck
      type: object
    Error:
      description: Problem details (tools.ietf.org/html/rfc7807)
      properties:
        title:
          description: A human readable documentation for the problem type
          title: title
          type: string
        status:
          description: The HTTP status code
          title: status
          type: integer
        detail:
          description: A human readable explanation specific to this occurrence of
            the problem
          title: detail
          type: string
        type:
          description: An absolute URI that identifies the problem type
          title: type
          type: string
      required:
      - status
      - title
      title: Error
      type: object
    NoteId:
      description: The ID of the clinical note
      example: awesome-note
      maxLength: 60
      minLength: 3
      pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
      type: string
    PatientId:
      description: The ID of the FHIR patient
      example: awesome-patient
      maxLength: 60
      minLength: 3
      pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
      type: string
    Note:
      description: A clinical note
      example:
        identifier: awesome-note
        text: On 12/26/2020, Ms. Chloe Price met with Dr. Prescott in Seattle.
        type: loinc:LP29684-5
        patientId: awesome-patient
      properties:
        identifier:
          description: The ID of the clinical note
          example: awesome-note
          maxLength: 60
          minLength: 3
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
          type: string
        text:
          description: The content of the clinical note
          type: string
        type:
          description: The note type (LOINC concept)
          type: string
        patientId:
          description: The ID of the FHIR patient
          example: awesome-patient
          maxLength: 60
          minLength: 3
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
          type: string
      required:
      - identifier
      - patientId
      - text
      - type
      title: Note
      type: object
    TextCovidSymptomAnnotationRequest:
      description: A request to annotate COVID symptoms in a clinical note
      example:
        note:
          identifier: awesome-note
          text: On 12/26/2020, Ms. Chloe Price met with Dr. Prescott in Seattle.
          type: loinc:LP29684-5
          patientId: awesome-patient
      properties:
        note:
          $ref: '#/components/schemas/Note'
      required:
      - note
      type: object
    TextAnnotation:
      description: An annotation in a text
      example:
        start: 42
        length: 19
        text: the annotation text
        confidence: 95.5
      properties:
        start:
          description: The position of the first character
          type: integer
        length:
          description: The length of the annotation
          type: integer
        text:
          description: The string annotated
          type: string
        confidence:
          description: The confidence in the accuracy of the annotation
          format: float
          maximum: 100
          minimum: 0
          type: number
      required:
      - confidence
      - length
      - start
      - text
      type: object
    TextCovidSymptomAnnotation:
      allOf:
      - $ref: '#/components/schemas/TextAnnotation'
      - $ref: '#/components/schemas/TextCovidSymptomAnnotation_allOf'
      description: A COVID symptom annotation in a text
      example:
        start: 42
        length: 9
        text: dry cough
        condition: cough
        certainty: positive
        confidence: 95.5
      required:
      - certainty
      - condition
      - confidence
      - length
      - start
      - text
      title: TextCovidSymptomAnnotation
      type: object
    TextCovidSymptomAnnotationResponse:
      description: The response to a COVID symptoms annotation request
      example:
        textCovidSymptomAnnotations:
        - start: 42
          length: 9
          text: dry cough
          condition: cough
          certainty: positive
          confidence: 95.5
        - start: 42
          length: 9
          text: dry cough
          condition: cough
          certainty: positive
          confidence: 95.5
      properties:
        textCovidSymptomAnnotations:
          description: A list of COVID symptom annotations
          items:
            $ref: '#/components/schemas/TextCovidSymptomAnnotation'
          title: textCovidSymptomAnnotations
          type: array
      required:
      - textCovidSymptomAnnotations
      title: TextCovidSymptomAnnotationResponse
      type: object
    License:
      description: The license (license keyword used by GitHub)
      enum:
      - afl-3.0
      - apache-2.0
      - artistic-2.0
      - bsl-1.0
      - bsd-2-clause
      - bsd-3-clause
      - bsd-3-clause-clear
      - cc
      - cc0-1.0
      - cc-by-4.0
      - cc-by-sa-4.0
      - wtfpl
      - ecl-2.0
      - epl-1.0
      - epl-2.0
      - eupl-1.1
      - agpl-3.0
      - gpl
      - gpl-2.0
      - gpl-3.0
      - lgpl
      - lgpl-2.1
      - lgpl-3.0
      - isc
      - lppl-1.3c
      - ms-pl
      - mit
      - mpl-2.0
      - osl-3.0
      - postgresql
      - ofl-1.1
      - ncsa
      - unlicense
      - zlib
      - none
      example: apache-2.0
      title: License
      type: string
    ToolType:
      description: The type of this tool
      example: nlpsandbox:date-annotator
      maxLength: 60
      minLength: 3
      pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*(:)[a-z0-9]+(?:-[a-z0-9]+)*$
      type: string
    Tool:
      description: Information about an NLP tool
      example:
        name: awesome-nlp-tool
        version: 1.0.6
        license: apache-2.0
        repository: github:awesome-org/awesome-nlp-tool
        description: An awesome NLP Tool that takes as input X and outputs Y.
        author: Awesome Team
        authorEmail: author@example.com
        url: https://example.com
        type: nlpsandbox:date-annotator
        apiVersion: 1.0.2
      properties:
        name:
          description: The tool name
          maxLength: 60
          minLength: 3
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
          type: string
        version:
          description: The version of the tool (SemVer string)
          minLength: 1
          pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
          type: string
        license:
          $ref: '#/components/schemas/License'
        repository:
          description: The place where the code lives
          type: string
        description:
          description: A short, one-sentence summary of the tool
          maxLength: 100
          type: string
        author:
          description: The author of the tool
          type: string
        authorEmail:
          description: The email address of the author
          format: email
          type: string
        url:
          description: The URL to the homepage of the tool
          format: uri
          type: string
        type:
          description: The type of this tool
          example: nlpsandbox:date-annotator
          maxLength: 60
          minLength: 3
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*(:)[a-z0-9]+(?:-[a-z0-9]+)*$
          type: string
        apiVersion:
          description: The version of the tool OpenAPI specification
          minLength: 1
          pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
          type: string
      required:
      - apiVersion
      - author
      - authorEmail
      - description
      - license
      - name
      - repository
      - type
      - url
      - version
      title: Tool
      type: object
    ToolDependencies:
      description: A list of tool dependencies
      example:
        toolDependencies:
        - name: awesome-nlp-tool
          version: 1.0.6
          license: apache-2.0
          repository: github:awesome-org/awesome-nlp-tool
          description: An awesome NLP Tool that takes as input X and outputs Y.
          author: Awesome Team
          authorEmail: author@example.com
          url: https://example.com
          type: nlpsandbox:date-annotator
          apiVersion: 1.0.2
        - name: awesome-nlp-tool
          version: 1.0.6
          license: apache-2.0
          repository: github:awesome-org/awesome-nlp-tool
          description: An awesome NLP Tool that takes as input X and outputs Y.
          author: Awesome Team
          authorEmail: author@example.com
          url: https://example.com
          type: nlpsandbox:date-annotator
          apiVersion: 1.0.2
      properties:
        toolDependencies:
          description: A list of tools
          items:
            $ref: '#/components/schemas/Tool'
          title: toolDependencies
          type: array
      required:
      - toolDependencies
      title: ToolDependencies
      type: object
    TextCovidSymptomAnnotation_allOf:
      properties:
        condition:
          description: |
            The sign/symptom type according to CDC definition
          enum:
          - fever
          - chill
          - cough
          - fatigue
          - nasal_obstruction
          - loss_of_appetite
          - diarrhea
          - abdominal_pain
          - nausea
          - vomiting
          - sore_throat
          - headache
          - myalgia
          - loss_of_taste
          - loss_of_smell
          - dyspnea
          - chest_pain
          - delirium
          - hypersomnia
          - cyanosis
          type: string
        certainty:
          description: |
            Whether the annotation is positively or negatively correlated with the presence of COVID
          enum:
          - positive
          - negated
          - possible
          type: string
      type: object
